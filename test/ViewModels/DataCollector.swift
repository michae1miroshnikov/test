//
//  DataCollector.swift
//  test
//
//  Created by Michael Miroshnikov on 07/08/2025.
//

import Foundation
import UIKit

/// –ö–ª–∞—Å –¥–ª—è –∑–±–æ—Ä—É –¥–∞–Ω–∏—Ö –ø—Ä–æ —Å—Ç–∞–Ω –ø—Ä–∏—Å—Ç—Ä–æ—é
class DataCollector: ObservableObject {
    @Published var currentBatteryLevel: Float = 0.0
    @Published var isMonitoring = false
    
    private var timer: Timer?
    
    init() {
        // –í–∫–ª—é—á–∞—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –±–∞—Ç–∞—Ä–µ—ó
        UIDevice.current.isBatteryMonitoringEnabled = true
    }
    
    /// –ü–æ—á–∏–Ω–∞—î –∑–±—ñ—Ä –¥–∞–Ω–∏—Ö –∫–æ–∂–Ω—ñ 2 —Ö–≤–∏–ª–∏–Ω–∏
    func startDataCollection() {
        guard !isMonitoring else { return }
        
        isMonitoring = true
        
        // –ó–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ –æ–¥—Ä–∞–∑—É
        collectBatteryData()
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–π–º–µ—Ä –Ω–∞ –∫–æ–∂–Ω—ñ 2 —Ö–≤–∏–ª–∏–Ω–∏ (120 —Å–µ–∫—É–Ω–¥)
        timer = Timer.scheduledTimer(withTimeInterval: 120.0, repeats: true) { [weak self] _ in
            self?.collectBatteryData()
        }
    }
    
    /// –ó—É–ø–∏–Ω—è—î –∑–±—ñ—Ä –¥–∞–Ω–∏—Ö
    func stopDataCollection() {
        isMonitoring = false
        timer?.invalidate()
        timer = nil
    }
    
    /// –ó–±–∏—Ä–∞—î –¥–∞–Ω—ñ –ø—Ä–æ –±–∞—Ç–∞—Ä–µ—é
    private func collectBatteryData() {
        let batteryLevel = UIDevice.current.batteryLevel
        currentBatteryLevel = batteryLevel
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏
        let deviceData = DeviceData(batteryLevel: batteryLevel)
        
        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        NetworkManager.shared.sendData(deviceData)
        
        print("üìä –ó—ñ–±—Ä–∞–Ω–æ –¥–∞–Ω—ñ: —Ä—ñ–≤–µ–Ω—å –±–∞—Ç–∞—Ä–µ—ó \(batteryLevel * 100)%")
    }
    
    deinit {
        stopDataCollection()
        UIDevice.current.isBatteryMonitoringEnabled = false
    }
} 